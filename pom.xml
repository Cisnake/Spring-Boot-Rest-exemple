<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.khoubyari</groupId>
	<artifactId>spring-boot-rest-example</artifactId>
	<version>0.5.0-SNAPSHOT</version>
	<packaging>war</packaging>
	<description>Example project demonstrating REST APIs implemented using Spring Boot, in-memory database, embedded Tomcat, Swagger, JsonPath, Hamcrest and MockMVC</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.9.RELEASE</version>
	</parent>

	<properties>
		<start-class>com.khoubyari.example.Application</start-class>
		<!--<docker.registry.name></docker.registry.name> leave empty for docker 
			hub; use e.g. "localhost:5000/" for a local docker registry <docker.repository.name>${docker.registry.name}cisnake/${project.artifactId}</docker.repository.name> -->
	</properties>

	<dependencies>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-actuator</artifactId>
		</dependency>

		<!-- web development, including Tomcat and spring-webmvc -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- Spring security -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- spring-data-jpa, spring-orm and Hibernate -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.4.193</version>
		</dependency>

		<!-- spring-test, hamcrest, ... -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
			<version>1.9.13</version>
		</dependency>

		<!-- attribute level json comparisons -->
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>2.4.0</version>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path-assert</artifactId>
			<version>0.9.1</version>
			<scope>test</scope>
		</dependency>

		<!-- integration with Swagger API doc generation http://goo.gl/J5FQDM -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.5.0</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.5.0</version>
		</dependency>

		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api -->
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.3.0</version>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<!-- Spring boot support -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<addResources>false</addResources>
				</configuration>
			</plugin>
			<!-- <plugin> <groupId>org.jolokia</groupId> <artifactId>docker-maven-plugin</artifactId> 
				<version>0.13.3</version> <configuration> <images> <image> <alias>${project.artifactId}</alias> 
				<name>${docker.repository.name}:${project.version}</name> <build> <from>java:8-jre</from> 
				<maintainer>cisnake</maintainer> <assembly> <descriptor>docker-assembly.xml</descriptor> 
				</assembly> <ports> <port>8090</port> <port>8091</port> </ports> <cmd> <shell>java 
				-jar \ /maven/${project.build.finalName}.war server \ /maven/docker-config.yml</shell> 
				</cmd> </build> <run> </run> </image> </images> </configuration> </plugin> -->

			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.4.10</version>
				<configuration>
					<imageName>cisnake/${project.artifactId}</imageName>
					<!-- <dockerDirectory>${project.basedir}/docker</dockerDirectory> -->
					<baseImage>java:openjdk-8-jdk-alpine</baseImage>
					<dockerHost>tcp://192.168.99.100:2376</dockerHost>
					<entryPoint>["java","-jar","/${project.build.finalName}.war"]</entryPoint>
					<resources>
						<!-- copy the service's jar file from target into the root directory 
							of the image -->
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.war</include>
						</resource>
					</resources>



				</configuration>
			</plugin>

	<plugin>
		<groupId>io.fabric8</groupId>
		<artifactId>docker-maven-plugin</artifactId>
		<version>0.16.7</version>
		<configuration>
			<images>
				<image>
					<name>arquillian/age-checker:${project.version}</name>
					<build>
						<dockerFileDir>${project.basedir}</dockerFileDir>
					</build>
				</image>
			</images>
		</configuration>
	</plugin>


		</plugins>
	</build>
	
	<!--	<repositories>
		<repository>
			<id>maven-public</id>
			<url>http://192.168.99.100:28081/repository/maven-public/</url>
		</repository>
	</repositories>	
	
	<distributionManagement>
		<snapshotRepository>
			<id>nexus-snapshots</id>
			<url>http://192.168.99.100:28081/repository/maven-snapshots/</url>
		</snapshotRepository>
		<repository>
			<id>nexus-releases</id>
			<url>http://192.168.99.100:28081/repository/maven-releases/</url>
		</repository>
	</distributionManagement>
	-->
</project>
